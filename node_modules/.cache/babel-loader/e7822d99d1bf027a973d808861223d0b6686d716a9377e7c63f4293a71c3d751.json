{"ast":null,"code":"import axios from 'axios';\nimport $ from 'jquery';\nexport default {\n  data() {\n    return {\n      registerData: {\n        ncharRegisterUserName: '',\n        ncharEmail: '',\n        ncharMobileNumber: '',\n        ncharAadharNumber: ''\n      },\n      loginData: {\n        email: '',\n        otp: '' // Add OTP field to login data\n      },\n\n      isRegistered: false\n    };\n  },\n  methods: {\n    toggleForm() {\n      /* eslint-disable-next-line no-undef */\n      $('form').animate({\n        height: 'toggle',\n        opacity: 'toggle'\n      }, 'slow');\n    },\n    async requestOTP() {\n      if (this.validateEmail()) {\n        try {\n          // Send a request to your server to generate and send OTP\n          const response = await axios.post('http://127.0.0.1:5555/generateOtp', {\n            email: this.loginData.email\n          });\n          if (response.status === 200) {\n            console.log('OTP Sent Successfully');\n            alert('OTP Sent Successfully');\n          } else {\n            console.error('OTP request failed:', response.data.error);\n            alert('OTP request failed. Please try again.');\n          }\n        } catch (error) {\n          console.error('Error:', error);\n          alert('An error occurred while requesting OTP. Please try again later.');\n        }\n      } else {\n        alert('Please enter a valid email address.');\n      }\n    },\n    validateEmail() {\n      // Add your email validation logic here\n      // You can use a regular expression or any other method\n      return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(this.loginData.email);\n    },\n    async login() {\n      if (this.validateEmail() && this.loginData.otp !== '') {\n        try {\n          // Send a request to your server to verify OTP\n          const response = await axios.post('http://127.0.0.1:5555/verifyOtp', {\n            email: this.loginData.email,\n            otp: this.loginData.otp\n          });\n          if (response.status === 200) {\n            console.log('OTP Verified Successfully');\n            alert('OTP Verified Successfully');\n            // You can now consider the user as logged in\n          } else {\n            console.error('OTP verification failed:', response.data.error);\n            alert('OTP verification failed. Please try again.');\n          }\n        } catch (error) {\n          console.error('Error:', error);\n          alert('An error occurred during OTP verification. Please try again later.');\n        }\n      } else {\n        alert('Please enter a valid email and OTP.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","$","data","registerData","ncharRegisterUserName","ncharEmail","ncharMobileNumber","ncharAadharNumber","loginData","email","otp","isRegistered","methods","toggleForm","animate","height","opacity","requestOTP","validateEmail","response","post","status","console","log","alert","error","test","login"],"sources":["C:\\PRojectAppServer\\formsystem\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-page\">\r\n    <div class=\"form\">\r\n      <!-- Registration Form -->\r\n      <form v-if=\"!isRegistered\" class=\"register-form\">\r\n        <!-- Your registration input fields here -->\r\n\r\n        <!-- Add a button to request OTP -->\r\n        <button @click.prevent=\"requestOTP\">Get OTP</button>\r\n\r\n        <p class=\"message\">Already registered? <a href=\"#\" @click.prevent=\"toggleForm\">Sign In</a></p>\r\n      </form>\r\n\r\n      <!-- Login Form -->\r\n      <form v-else class=\"login-form\">\r\n        <input v-model=\"loginData.email\" type=\"text\" placeholder=\"Email Address\" />\r\n        <input v-model=\"loginData.otp\" type=\"text\" placeholder=\"Enter OTP\" />\r\n        <button @click.prevent=\"login\">Login</button>\r\n        <p class=\"message\">Not registered? <a href=\"#\" @click.prevent=\"toggleForm\">Create an account</a></p>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      registerData: {\r\n        ncharRegisterUserName: '',\r\n        ncharEmail: '',\r\n        ncharMobileNumber: '',\r\n        ncharAadharNumber: '',\r\n      },\r\n      loginData: {\r\n        email: '',\r\n        otp: '', // Add OTP field to login data\r\n      },\r\n      isRegistered: false,\r\n    };\r\n  },\r\n  methods: {\r\n    toggleForm() {\r\n      /* eslint-disable-next-line no-undef */\r\n      $('form').animate({ height: 'toggle', opacity: 'toggle' }, 'slow');\r\n    },\r\n    async requestOTP() {\r\n      if (this.validateEmail()) {\r\n        try {\r\n          // Send a request to your server to generate and send OTP\r\n          const response = await axios.post('http://127.0.0.1:5555/generateOtp', {\r\n            email: this.loginData.email,\r\n          });\r\n\r\n          if (response.status === 200) {\r\n            console.log('OTP Sent Successfully');\r\n            alert('OTP Sent Successfully');\r\n          } else {\r\n            console.error('OTP request failed:', response.data.error);\r\n            alert('OTP request failed. Please try again.');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n          alert('An error occurred while requesting OTP. Please try again later.');\r\n        }\r\n      } else {\r\n        alert('Please enter a valid email address.');\r\n      }\r\n    },\r\n    validateEmail() {\r\n      // Add your email validation logic here\r\n      // You can use a regular expression or any other method\r\n      return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(this.loginData.email);\r\n    },\r\n    async login() {\r\n      if (this.validateEmail() && this.loginData.otp !== '') {\r\n        try {\r\n          // Send a request to your server to verify OTP\r\n          const response = await axios.post('http://127.0.0.1:5555/verifyOtp', {\r\n            email: this.loginData.email,\r\n            otp: this.loginData.otp,\r\n          });\r\n\r\n          if (response.status === 200) {\r\n            console.log('OTP Verified Successfully');\r\n            alert('OTP Verified Successfully');\r\n            // You can now consider the user as logged in\r\n          } else {\r\n            console.error('OTP verification failed:', response.data.error);\r\n            alert('OTP verification failed. Please try again.');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n          alert('An error occurred during OTP verification. Please try again later.');\r\n        }\r\n      } else {\r\n        alert('Please enter a valid email and OTP.');\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/css?family=Roboto:300');\r\n\r\n.login-page {\r\n  width: 360px;\r\n  padding: 8% 0 0;\r\n  margin: auto;\r\n}\r\n.form {\r\n  position: relative;\r\n  z-index: 1;\r\n  background: #FFFFFF;\r\n  max-width: 360px;\r\n  margin: 0 auto 100px;\r\n  padding: 45px;\r\n  text-align: center;\r\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);\r\n}\r\n.form input {\r\n  font-family: 'Roboto', sans-serif;\r\n  outline: 0;\r\n  background: #f2f2f2;\r\n  width: 100%;\r\n  border: 0;\r\n  margin: 0 0 15px;\r\n  padding: 15px;\r\n  box-sizing: border-box;\r\n  font-size: 14px;\r\n}\r\n.form button {\r\n  font-family: 'Roboto', sans-serif;\r\n  text-transform: uppercase;\r\n  outline: 0;\r\n  background: #4CAF50;\r\n  width: 100%;\r\n  border: 0;\r\n  padding: 15px;\r\n  color: #FFFFFF;\r\n  font-size: 14px;\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n}\r\n.form button:hover, .form button:active, .form button:focus {\r\n  background: #43A047;\r\n}\r\n.form .message {\r\n  margin: 15px 0 0;\r\n  color: #b3b3b3;\r\n  font-size: 12px;\r\n}\r\n.form .message a {\r\n  color: #4CAF50;\r\n  text-decoration: none;\r\n}\r\n.form .register-form {\r\n  display: none;\r\n}\r\n.container {\r\n  position: relative;\r\n  z-index: 1;\r\n  max-width: 300px;\r\n  margin: 0 auto;\r\n}\r\n.container:before, .container:after {\r\n  content: '';\r\n  display: block;\r\n  clear: both;\r\n}\r\n.container .info {\r\n  margin: 50px auto;\r\n  text-align: center;\r\n}\r\n.container .info h1 {\r\n  margin: 0 0 15px;\r\n  padding: 0;\r\n  font-size: 36px;\r\n  font-weight: 300;\r\n  color: #1a1a1a;\r\n}\r\n.container .info span {\r\n  color: #4d4d4d;\r\n  font-size: 12px;\r\n}\r\n.container .info span a {\r\n  color: #000000;\r\n  text-decoration: none;\r\n}\r\n.container .info span .fa {\r\n  color: #EF3B3A;\r\n}\r\nbody {\r\n  background: #76b852;\r\n  background: -webkit-linear-gradient(right, #76b852, #8DC26F);\r\n  background: -moz-linear-gradient(right, #76b852, #8DC26F);\r\n  background: -o-linear-gradient(right, #76b852, #8DC26F);\r\n  background: linear-gradient(to left, #76b852, #8DC26F);\r\n  font-family: 'Roboto', sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n</style>"],"mappings":"AAyBA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,CAAA,MAAO,QAAQ;AAEtB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;QACZC,qBAAqB,EAAE,EAAE;QACzBC,UAAU,EAAE,EAAE;QACdC,iBAAiB,EAAE,EAAE;QACrBC,iBAAiB,EAAE;MACrB,CAAC;MACDC,SAAS,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,GAAG,EAAE,EAAE,CAAE;MACX,CAAC;;MACDC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX;MACAZ,CAAC,CAAC,MAAM,CAAC,CAACa,OAAO,CAAC;QAAEC,MAAM,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAS,CAAC,EAAE,MAAM,CAAC;IACpE,CAAC;IACD,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI,IAAI,CAACC,aAAa,CAAC,CAAC,EAAE;QACxB,IAAI;UACF;UACA,MAAMC,QAAO,GAAI,MAAMnB,KAAK,CAACoB,IAAI,CAAC,mCAAmC,EAAE;YACrEX,KAAK,EAAE,IAAI,CAACD,SAAS,CAACC;UACxB,CAAC,CAAC;UAEF,IAAIU,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;YAC3BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;YACpCC,KAAK,CAAC,uBAAuB,CAAC;UAChC,OAAO;YACLF,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEN,QAAQ,CAACjB,IAAI,CAACuB,KAAK,CAAC;YACzDD,KAAK,CAAC,uCAAuC,CAAC;UAChD;QACF,EAAE,OAAOC,KAAK,EAAE;UACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;UAC9BD,KAAK,CAAC,iEAAiE,CAAC;QAC1E;MACF,OAAO;QACLA,KAAK,CAAC,qCAAqC,CAAC;MAC9C;IACF,CAAC;IACDN,aAAaA,CAAA,EAAG;MACd;MACA;MACA,OAAO,4BAA4B,CAACQ,IAAI,CAAC,IAAI,CAAClB,SAAS,CAACC,KAAK,CAAC;IAChE,CAAC;IACD,MAAMkB,KAAKA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACT,aAAa,CAAC,KAAK,IAAI,CAACV,SAAS,CAACE,GAAE,KAAM,EAAE,EAAE;QACrD,IAAI;UACF;UACA,MAAMS,QAAO,GAAI,MAAMnB,KAAK,CAACoB,IAAI,CAAC,iCAAiC,EAAE;YACnEX,KAAK,EAAE,IAAI,CAACD,SAAS,CAACC,KAAK;YAC3BC,GAAG,EAAE,IAAI,CAACF,SAAS,CAACE;UACtB,CAAC,CAAC;UAEF,IAAIS,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;YAC3BC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;YACxCC,KAAK,CAAC,2BAA2B,CAAC;YAClC;UACF,OAAO;YACLF,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEN,QAAQ,CAACjB,IAAI,CAACuB,KAAK,CAAC;YAC9DD,KAAK,CAAC,4CAA4C,CAAC;UACrD;QACF,EAAE,OAAOC,KAAK,EAAE;UACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;UAC9BD,KAAK,CAAC,oEAAoE,CAAC;QAC7E;MACF,OAAO;QACLA,KAAK,CAAC,qCAAqC,CAAC;MAC9C;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}