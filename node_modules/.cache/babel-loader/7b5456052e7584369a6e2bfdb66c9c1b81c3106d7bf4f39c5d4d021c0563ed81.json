{"ast":null,"code":"import axios from 'axios';\nimport $ from 'jquery';\nexport default {\n  data() {\n    return {\n      registerData: {\n        ncharRegisterUserName: '',\n        ncharEmail: '',\n        ncharMobileNumber: '',\n        ncharAadharNumber: ''\n      },\n      loginData: {\n        email: '',\n        otp: ''\n      },\n      isRegistered: false\n    };\n  },\n  methods: {\n    toggleForm() {\n      /* eslint-disable-next-line no-undef */\n      $('form').animate({\n        height: 'toggle',\n        opacity: 'toggle'\n      }, 'slow');\n    },\n    async requestOTP() {\n      if (this.loginData.email.trim() !== '') {\n        // Check if email is not empty\n        try {\n          // Send a request to check if the email is registered\n          const checkEmailResponse = await axios.post('http://127.0.0.1:5555/checkEmail', {\n            email: this.loginData.email\n          });\n          if (checkEmailResponse.status === 200 && checkEmailResponse.data.isRegistered) {\n            // The email is registered, proceed to generate OTP\n            const otpResponse = await axios.post('http://127.0.0.1:5555/generateOtp', {\n              email: this.loginData.email\n            });\n            if (otpResponse.status === 200) {\n              console.log('OTP Sent Successfully');\n              alert('OTP Sent Successfully');\n            } else {\n              console.error('OTP request failed:', otpResponse.data.error);\n              alert('OTP request failed. Please try again.');\n            }\n          } else {\n            console.error('Email is not registered');\n            alert('Email is not registered. Please register an account.');\n          }\n        } catch (error) {\n          console.error('Error:', error);\n          alert('An error occurred while checking email or requesting OTP. Please try again later.');\n        }\n      } else {\n        alert('Please enter an email address.');\n      }\n    },\n    async login() {\n      if (this.loginData.email.trim() !== '' && this.loginData.otp.trim() !== '') {\n        // Check if email and OTP are not empty\n        try {\n          // Send a request to your server to verify OTP\n          const response = await axios.post('http://127.0.0.1:5555/verifyOtp', {\n            email: this.loginData.email,\n            otp: this.loginData.otp\n          });\n          if (response.status === 200) {\n            console.log('OTP Verified Successfully');\n            alert('OTP Verified Successfully');\n            // You can now consider the user as logged in\n          } else {\n            console.error('OTP verification failed:', response.data.error);\n            alert('OTP verification failed. Please try again.');\n          }\n        } catch (error) {\n          console.error('Error:', error);\n          alert('An error occurred during OTP verification. Please try again later.');\n        }\n      } else {\n        alert('Please enter both email and OTP.');\n      }\n    },\n    async register() {\n      if (this.validateRegistrationData()) {\n        try {\n          const response = await axios.post('http://127.0.0.1:5555/saveRegisterUser', this.registerData);\n          if (response.status === 200) {\n            console.log('Registration Successful');\n            alert('Registration Successful');\n            this.resetRegistrationForm();\n            this.isRegistered = true;\n          } else {\n            console.error('Registration failed:', response.data.error);\n            alert('Registration failed. Please try again.');\n          }\n        } catch (error) {\n          console.error('Error:', error);\n          alert('An error occurred during registration. Please try again later.');\n        }\n      } else {\n        alert('Please fill in all fields.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","$","data","registerData","ncharRegisterUserName","ncharEmail","ncharMobileNumber","ncharAadharNumber","loginData","email","otp","isRegistered","methods","toggleForm","animate","height","opacity","requestOTP","trim","checkEmailResponse","post","status","otpResponse","console","log","alert","error","login","response","register","validateRegistrationData","resetRegistrationForm"],"sources":["C:\\PRojectAppServer\\formsystem\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-page\">\r\n    <div class=\"form\">\r\n      <form class=\"register-form\">\r\n        <input v-model=\"registerData.ncharRegisterUserName\" type=\"text\" placeholder=\"Name\" />\r\n        <input v-model=\"registerData.ncharEmail\" type=\"text\" placeholder=\"Email Address\" />\r\n        <input v-model=\"registerData.ncharMobileNumber\" type=\"text\" placeholder=\"Contact Number\" />\r\n        <input v-model=\"registerData.ncharAadharNumber\" type=\"text\" placeholder=\"Aadhar Number\" />\r\n        <button @click.prevent=\"register\">Create</button>\r\n\r\n        <p class=\"message\">Already registered? <a href=\"#\" @click.prevent=\"toggleForm\">Sign In</a></p>\r\n      </form>\r\n      <form class=\"login-form\">\r\n        <input v-model=\"loginData.email\" type=\"text\" placeholder=\"Email Address\" />\r\n        <button @click.prevent=\"requestOTP\">Get OTP</button> \r\n        <input v-model=\"loginData.otp\" type=\"text\" placeholder=\"Enter OTP\" />\r\n        <button @click.prevent=\"login\">Login</button>\r\n        <p class=\"message\">Not registered? <a href=\"#\" @click.prevent=\"toggleForm\">Create an account</a></p>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      registerData: {\r\n        ncharRegisterUserName: '',\r\n        ncharEmail: '',\r\n        ncharMobileNumber: '',\r\n        ncharAadharNumber: '',\r\n      },\r\n      loginData: {\r\n        email: '',\r\n        otp: '',\r\n      },\r\n      isRegistered: false,\r\n    };\r\n  },\r\n  methods: {\r\n    toggleForm() {\r\n      /* eslint-disable-next-line no-undef */\r\n      $('form').animate({ height: 'toggle', opacity: 'toggle' }, 'slow');\r\n    },\r\n    async requestOTP() {\r\n  if (this.loginData.email.trim() !== '') { // Check if email is not empty\r\n    try {\r\n      // Send a request to check if the email is registered\r\n      const checkEmailResponse = await axios.post('http://127.0.0.1:5555/checkEmail', {\r\n        email: this.loginData.email,\r\n      });\r\n\r\n      if (checkEmailResponse.status === 200 && checkEmailResponse.data.isRegistered) {\r\n        // The email is registered, proceed to generate OTP\r\n        const otpResponse = await axios.post('http://127.0.0.1:5555/generateOtp', {\r\n          email: this.loginData.email,\r\n        });\r\n\r\n        if (otpResponse.status === 200) {\r\n          console.log('OTP Sent Successfully');\r\n          alert('OTP Sent Successfully');\r\n        } else {\r\n          console.error('OTP request failed:', otpResponse.data.error);\r\n          alert('OTP request failed. Please try again.');\r\n        }\r\n      } else {\r\n        console.error('Email is not registered');\r\n        alert('Email is not registered. Please register an account.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('An error occurred while checking email or requesting OTP. Please try again later.');\r\n    }\r\n  } else {\r\n    alert('Please enter an email address.');\r\n  }\r\n},\r\n    async login() {\r\n      if (this.loginData.email.trim() !== '' && this.loginData.otp.trim() !== '') { // Check if email and OTP are not empty\r\n        try {\r\n          // Send a request to your server to verify OTP\r\n          const response = await axios.post('http://127.0.0.1:5555/verifyOtp', {\r\n            email: this.loginData.email,\r\n            otp: this.loginData.otp,\r\n          });\r\n\r\n          if (response.status === 200) {\r\n            console.log('OTP Verified Successfully');\r\n            alert('OTP Verified Successfully');\r\n            // You can now consider the user as logged in\r\n          } else {\r\n            console.error('OTP verification failed:', response.data.error);\r\n            alert('OTP verification failed. Please try again.');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n          alert('An error occurred during OTP verification. Please try again later.');\r\n        }\r\n      } else {\r\n        alert('Please enter both email and OTP.');\r\n      }\r\n    },\r\n    async register() {\r\n  if (this.validateRegistrationData()) {\r\n    try {\r\n      const response = await axios.post('http://127.0.0.1:5555/saveRegisterUser', this.registerData);\r\n      \r\n      if (response.status === 200) {\r\n        console.log('Registration Successful');\r\n        alert('Registration Successful');\r\n        this.resetRegistrationForm();\r\n        this.isRegistered = true;\r\n      } else {\r\n        console.error('Registration failed:', response.data.error);\r\n        alert('Registration failed. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('An error occurred during registration. Please try again later.');\r\n    }\r\n  } else {\r\n    alert('Please fill in all fields.');\r\n  }\r\n},\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/css?family=Roboto:300');\r\n\r\n.login-page {\r\n  width: 360px;\r\n  padding: 8% 0 0;\r\n  margin: auto;\r\n}\r\n.form {\r\n  position: relative;\r\n  z-index: 1;\r\n  background: #FFFFFF;\r\n  max-width: 360px;\r\n  margin: 0 auto 100px;\r\n  padding: 45px;\r\n  text-align: center;\r\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);\r\n}\r\n.form input {\r\n  font-family: 'Roboto', sans-serif;\r\n  outline: 0;\r\n  background: #f2f2f2;\r\n  width: 100%;\r\n  border: 0;\r\n  margin: 0 0 15px;\r\n  padding: 15px;\r\n  box-sizing: border-box;\r\n  font-size: 14px;\r\n}\r\n.form button {\r\n  font-family: 'Roboto', sans-serif;\r\n  text-transform: uppercase;\r\n  outline: 0;\r\n  background: #4CAF50;\r\n  width: 100%;\r\n  border: 0;\r\n  padding: 15px;\r\n  color: #FFFFFF;\r\n  font-size: 14px;\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n}\r\n.form button:hover, .form button:active, .form button:focus {\r\n  background: #43A047;\r\n}\r\n.form .message {\r\n  margin: 15px 0 0;\r\n  color: #b3b3b3;\r\n  font-size: 12px;\r\n}\r\n.form .message a {\r\n  color: #4CAF50;\r\n  text-decoration: none;\r\n}\r\n.form .register-form {\r\n  display: none;\r\n}\r\n.container {\r\n  position: relative;\r\n  z-index: 1;\r\n  max-width: 300px;\r\n  margin: 0 auto;\r\n}\r\n.container:before, .container:after {\r\n  content: '';\r\n  display: block;\r\n  clear: both;\r\n}\r\n.container .info {\r\n  margin: 50px auto;\r\n  text-align: center;\r\n}\r\n.container .info h1 {\r\n  margin: 0 0 15px;\r\n  padding: 0;\r\n  font-size: 36px;\r\n  font-weight: 300;\r\n  color: #1a1a1a;\r\n}\r\n.container .info span {\r\n  color: #4d4d4d;\r\n  font-size: 12px;\r\n}\r\n.container .info span a {\r\n  color: #000000;\r\n  text-decoration: none;\r\n}\r\n.container .info span .fa {\r\n  color: #EF3B3A;\r\n}\r\nbody {\r\n  background: #76b852;\r\n  background: -webkit-linear-gradient(right, #76b852, #8DC26F);\r\n  background: -moz-linear-gradient(right, #76b852, #8DC26F);\r\n  background: -o-linear-gradient(right, #76b852, #8DC26F);\r\n  background: linear-gradient(to left, #76b852, #8DC26F);\r\n  font-family: 'Roboto', sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}